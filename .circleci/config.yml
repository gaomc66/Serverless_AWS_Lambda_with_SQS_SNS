# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

version: 2
jobs:
  pr_check:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline


      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run:
          name: integration test
          command: mvn integration-test

  build:
    filter:
      branch:
        only:
          - master
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4


    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: mvn dependency
          command: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: install tools
          command: |
            sudo apt-get -y update
            sudo apt-get -y install awscli
            aws --version

      - run:
          name: create war file
          command: |
            mvn package
            pwd
            ls -al
            ls -al ./target
            cp target/lambda-1.0-SNAPSHOT.jar lambda.jar
      - run:
          name: Build Deployment Artifact
          command: |
            mkdir lambda_artifact
            zip -r csye6225-lambda-${CIRCLE_BUILD_NUM}.zip lambda.jar codedeploy/*.sh appspec.yml cloudwatch-config.json
            pwd
            ls -al
            mv csye6225-lambda-${CIRCLE_BUILD_NUM}.zip lambda_artifact/
            ls -al
            pwd
            cd lambda_artifact
            pwd
            ls -al
            cd ..
            pwd
            ls -al
      - run:
          name: Copy Artifact to S3
          command: |
            aws s3 sync ./lambda_artifact s3://${S3_CODEDEPLOY_BUCKET}
      - run:
          name: CodeDeploy API call
          command: |
            aws lambda update-function-code \
                --function-name  test \
                --zip-file https://s3.amazonaws.com/${S3_CODEDEPLOY_BUCKET}/csye6225-lambda-${CIRCLE_BUILD_NUM}.zip


workflows:
  version: 2

  build-deploy-workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master


